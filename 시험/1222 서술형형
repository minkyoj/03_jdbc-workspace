1. 시퀀스가 뭐냐?

	자동으로 번호를 발생시켜주는 역할을 하는 객체
	정수값을 순차적으로 일정값씩 증가 시키면서 생성해줌(기본적으로는 1씩 증가)

2. 트리거가 뭐냐?

	내가 지정한 테이블 INSERT, UPDATE, DELETE 등 DML문에 의해 변경사항이 생길 때(테이블에 이벤트가 발생했을 때)
	자동으로 매번 실행할 내용을 미리 정의해둘 수 있는 객체

3. 뷰가 뭐냐?

	쿼리문을 저장해둘 수 있는 객체
	(자주 쓰는 긴 쿼리문을 저장해두면 그 긴 쿼리문을 매번 다시 기술할 필요 없음!!!)
	임시테이블 같은 존재(실제로 존재하는것이 아님) =>그냥 보여주기용	
	물리적인 테이블 : 실제!
    논리적인 테이블 : 가상! => 뷰는 논리적인 테이블!!

4. 외래키 제약조건 삭제옵션

	-ON DELETE RESTRICTED(기본값) : 삭제제한옵션으로, 자식 데이터로 쓰이는 부모데이터는
                                   아예 안되게끔!!!
    -ON DELETE SET NULL : 부모 데이터 삭제시 해당 데이터를 쓰고 있는 자식데이터의 값을
                          NULL로 변경
    -ON DELETE CASCADE : 부모데이터 삭제시 해당 데이터를 쓰고있는 자식데이터도 같이 삭제시킴

5. NUMBER, VARCHAR2, DATE 설명 - 디테일하게

	NUMBER, VARCHAR2, DATE
	숫자 타입, 문자타입  날짜 타입
	
	- NUMBER : 정수, 실수 등이 올 수 있음, 자료형 크기 안서도됌
    - VARCHAR2 : (10) <- 10바이트 길이 4000바이트, 가변길이
	- DATE : 자료형 크기 안써도됌

6. PK, FK 설명

	* PRIMARY KEY (기본키) 제약조건
		테이블에서 각 행들을 식별하기 위해 사용될 컬럼에 부여하는 제약 조건(식별자의 역할)
		PRIMARY KEY 제약조건을 부여하면 그 컬럼은 자동으로 NOT NULL + UNIQUE 제약조건을 가진다.

	* FOREIGN KEY(외래키) 제약조건
		다른 테이블에 존재하는 값만 들어와야 되는 특정 컬럼에 부여하는 제약조건
		-->다른 테이블을 참조한다고 표현
		-->주로 FOREIGN KEY 제약조건에 의해 테이블 간의 관계가 형성됨

7. 집합연산자 (UNION, UNION ALL, MINUS, INTERSERCT)

    -UNION     : 합집합 (두 쿼리문을 수행한 결과값을 더한 후 중복되는 값은 한번만 더해지도록)
               ->WHERE절의 OR 개념
    -INTERSECT : 교집합 (두 쿼리문 수행한 결과값에 중복된 결과값)
               ->WHERE절의 AND 개념
    -UNION ALL : 합집합 + 교집합 (중복되는 부분이 두번 표현될 수 있음)
				 여러개의 쿼리 결과를 무조건 다 더하는 연산자 (중복값 나옴)
    -MINUS     : 차집합 (선행 결과값에서 후행 결과값을 뺀 나머지)

8. DML DDL DCL TCL

	<DML : DATA MANIPULATION LANGUAGE> : 데이터 조작 언어
	INSERT DELETE UPDATE
	값을 삽입하고 삭제하고 변경하는 언어
	
	*DDL (DATA DEFINITION LANGUAGE) : 데이터 정의 언어
	CREATE, ALTER, DROP
    오라클에서 제공하는 객체(OBJECT)를 새로이 만들고(CREATE), 구조를 변경하고(ALTER)하고,
    구조 자체를 삭제(DROP)하는 언어
    즉, 실제 데이터 값이 아닌 구조 자체를 정의하는 언어
    주로 DB관리자, 설계자가 사용함.
	
	< DCL : DATA CONTROL LANGUGE > : 데이터 제어 언어
	GRANT, REVOKE
    계정에게 시스템 권한 또는 객체접근권한을 부여(GRANT)하거나 회수(REVOKE) 하는 구문
	
	< T C L : TRANSACTION CONTROL LANGUAGE >
    트랜젝션 제어 언어
	COMMIT, ROLLBACK, SAVEPOINT
	
	- 데이터베이스의 논리적 연산단위
    - 데이터의 변경사항(DML 추가, 수정, 삭제)등을 하나의 트랜잭션에 묶어서 처리
      DML문 한 개를 수행할 때 트랜잭션이 존재하면 해당 트랜잭션에 같이 묶어서 처리
                            트랜잭션이 존재하지 않으면 트랜잭션을 만들어서 묶음
      COMMIT하기 전까지 변경사항들을 하나의 트랜잭션에 담게됨
      커밋을 해야만이 실제 디비에 반영이 된다고 생각하면됨
	 
9. 서브쿼리가 뭐냐
	*서브쿼리(SUBQUERY)
    -하나의 SQL문 안에 포함된 또다른 SELECT문
    -메인 SQL문을 위해 보조 역할을 하는 쿼리문
	
	-단일행, 다중행, 다중열, 다중행 다중열

10. 각종 제약조건들

*종류 : NOT NULL, UNIQUE, CHECK, PRIMARY KEY, FOREIGN KEY

* NOT NULL 제약조건
		해당 컬럼에 반드시 값이 존재해야 할 경우 (즉, 해당 컬럼에 절대 NULL이 들어와서는 안되는 경우)
		삽입 / 수정시 NULL값을 허용하지 않도록 제한

		제약 조건을 부여하는 방식은 크게 2가지가 있음 (컬럼레벨방식 / 테이블레벨방식)
		* NOT NULL 제약조건은 오로지 컬럼레벨방식 밖에 안됨!!!
		
* UNIQUE 제약조건
		해당 컬럼에 중복된 값이 들어가서는 안 될 경우
		컬럼값에 중복값을 제한하는 제약조건
		삽입/수정시 기존에 있는 데이터값 중 중복값이 있을 경우 오류 발생!!!
		
* CHECK(조건식) 제약조건
		해당 컬럼에 들어올 수 있는 값에 대한 조건을 제시해둘 수 있음!
		해당 조건에 만족하는 데이터값만 담길 수 있음
		
* PRIMARY KEY (기본키) 제약조건
		테이블에서 각 행들을 식별하기 위해 사용될 컬럼에 부여하는 제약 조건(식별자의 역할)
		PRIMARY KEY 제약조건을 부여하면 그 컬럼은 자동으로 NOT NULL + UNIQUE 제약조건을 가진다.
	
		
* FOREIGN KEY(외래키) 제약조건
		다른 테이블에 존재하는 값만 들어와야 되는 특정 컬럼에 부여하는 제약조건
		-->다른 테이블을 참조한다고 표현
		-->주로 FOREIGN KEY 제약조건에 의해 테이블 간의 관계가 형성됨
		

11. 커밋 롤백?

	COMMIT; 진행 : 한 트랜잭션에 담겨있는 변경사항들을 실제 DB에 반영시키겠다는 의미
                   (후에 트랜잭션은 사라짐)
                  
    ROLLBACK; 진행 : 한 트랜잭션에 담겨있는 변경사항들을 삭제(취소) 한 후 마지막 COMMIT 시점으로 돌아감
     
    SAVEPOINT 포인트명; 진행 : 현재 이시점에 해당 포인트명으로 임시저장점을 정의해두는 것
                              ROLLBACK 진행시 전체 변경사항들을 다 취소하는 것이 아니라 일부만 롤백 가능!!!

12. 테이블 뭐냐?
	테이블(table)은 데이터베이스에서 행(가로, row, record)과 열(세로, column, field)로 짜여진 표에 기록된 데이터의 집합이다

13. 제약조건 뒤늦게 추가
ALTER 쓰는법

제약조건 추가/ 삭제 --> 수정은 불가!(수정하고자 한다면 삭제한 후 새로이 추가)

	제약조건 추가
		PRIMARY KEY : ALTER TABLE 테이블명 ADD PRIMARY KEY(컬럼명) 
		FOREIGN KEY : ALTER TABLE 테이블명 ADD PRIMARY KET(컬럼명) REFERENCES 참조할 테이블명 [(컬럼명)]
		UNIQUE : ALTER TABLE 테이블명 ADD UNIQUE(컬럼명)
		CHECK  : ALTER TABLE 테이블명 ADD CHECK(컬럼에 대한 조건)
		NOT NULL : ALTER TABLE 테이블명 MODIFY 컬럼명 NOT NULL \ NULL 
		
		제약조건명을 지정하고자 한다면 CONSTRAINT 제약조건명

